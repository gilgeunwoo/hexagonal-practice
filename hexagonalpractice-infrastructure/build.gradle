plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group 'com.example.hexagonalpractice'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // multi module
    implementation(project(":hexagonalpractice-application"))

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //redis
    implementation 'org.springframework.data:spring-data-redis'

    // db connectors
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt")

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'

    // configuration
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // uuid time
    implementation 'com.fasterxml.uuid:java-uuid-generator:3.1.4'
}

test {
    useJUnitPlatform()
}